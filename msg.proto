package Msg;

enum MsgType
{
  Join_Request  = 0x01;
  Join_Response = 0x02;
  UpdateStatus_Request = 0x03;
  UpdateStateHash_Request = 0x04;
  GetStateNode_Request = 0x05;
  GetStateNode_Response = 0x06;
  Common_Response = 0x07;
  MasterNotifyCmd_Request = 0x08;
  NewFile_Request = 0x09;
  NewFile_Response = 0x0a;
  File_Post = 0x0b;
  End_File_Post_Request = 0x0c;
  End_File_Post_Response = 0x0d;
  Rm_File_Request = 0x0e;
  FileOp_Request = 0x0f;
}

enum FileType{
    FT_FILE = 0x01;
    FT_DIR = 0x02;
}

enum FileOpType
{
    NEW_OP  = 0x01;
    RM_OP  = 0x02;
    MV_OP  = 0x03;
}

enum MsgResStatus
{
    MSG_RES_OK = 0x01;
    MSG_RES_ERROR = 0x02;
}

message FileOp
{
    required FileOpType type = 1;
    required string path = 2;
    // if FileOpType == MV_OP
    optional string dstPath = 3;
    required string newHash = 4;
}

message JoinRequest
{
    required string name = 1;
    required string ip = 2;
}

message UpdateStatusRequest
{
    required string name = 1;
    required int32 status = 2;
}

message UpdateStateHashRequest
{
    required string name = 1;
    required string hash = 2;
}

message GetStateNodeRequest
{
    required string name = 1;
}

message GetStateNodeResponse
{
    optional string name = 1;
    optional string ip = 2;
    optional string hash = 3;
}

// message MasterNotifyCmdRequest{
//     // required FileCMDType operation = 1;
//     required string file_path = 2;
//     required string hash = 3;
// }

message NewFileRequest{
    required string name = 1;
    required FileType type = 2;
    required int32 total_pack_size = 3;
    required int32 total_file_size = 4;
}

message NewFileResponse{
    optional int32 post_session_id = 1;
}

message RmFileRequest{
    required string path = 1;
}

message FilePost{
    required string name = 1;
    required int64 post_session_id = 2;
    required int32 pack_idx = 3;
    required int32 file_idx = 4;
    required bytes data = 5;
    required int32 data_size = 6;
    // required int32 total_size = 5;
    // required FileType type = 2;
}


message EndFilePostRequest{
    required string name = 1;
}

message EndFilePostResponse{
    required bool ok = 1;
    optional int32 lost_pack_idx = 2;
}

message Request
{
    optional JoinRequest join = 1;
    optional UpdateStatusRequest update_status = 2;
    optional GetStateNodeRequest get_state_node = 3;
    optional UpdateStateHashRequest state_hash = 4;
    optional NewFileRequest file = 5;
    optional RmFileRequest rm_op = 6;
}

// message VFs
message Response 
{
  required MsgResStatus status = 1;
  optional string info = 2;
  optional GetStateNodeResponse state_node = 3;
  optional NewFileResponse new_file_response = 4;
}


message Message
{
   required MsgType type = 1;
   optional Request request = 2;
   optional Response response = 3;
   optional FilePost file_post = 4;
//    optional Command  command = 5;
//    optional Indication indication = 6;
}